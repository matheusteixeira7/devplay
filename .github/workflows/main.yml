name: CI

on: push

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - '5432:5432'
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fakeflix_test
        # Set health checks to wait until Postgres has started.
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      localstack:
        image: localstack/localstack
        ports:
          - 4566:4566

    env:
      PGPASSWORD: postgres

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'

      - name: Install AWS CLI
        run: sudo pip install awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id test
          aws configure set aws_secret_access_key test
          aws configure set region us-east-1
          aws configure set output json

      - name: Copy test environment variables
        run: |
          cp .env.test .env

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Code format
        shell: bash
        run: |
          yarn lint:check
          yarn format:check

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            sleep 1
          done

      - name: Drop and Recreate Database
        run: |
          psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS fakeflix_test WITH (FORCE);"
          psql -h localhost -U postgres -c "CREATE DATABASE fakeflix_test;"

      - name: Setup modules databases
        shell: bash
        run: |
          yarn test:db:setup

      - name: Test types
        shell: bash
        run: yarn test:type

      - name: Test unit
        shell: bash
        run: yarn test:unit

      - name: Test E2E
        shell: bash
        run: |
          yarn test:e2e
